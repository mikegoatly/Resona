<UserControl xmlns="https://github.com/avaloniaui"
	         xmlns:rxui="clr-namespace:Avalonia.ReactiveUI;assembly=Avalonia.ReactiveUI"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
			 xmlns:icon="clr-namespace:Projektanker.Icons.Avalonia;assembly=Projektanker.Icons.Avalonia"
			 xmlns:vm="using:Resona.UI.ViewModels"
			 xmlns:local="using:Resona.UI.Views"
			 xmlns:i="clr-namespace:Avalonia.Xaml.Interactivity;assembly=Avalonia.Xaml.Interactivity"
			 xmlns:ia="clr-namespace:Avalonia.Xaml.Interactions.Core;assembly=Avalonia.Xaml.Interactions"
			 xmlns:converters="using:Resona.UI.Converters"
			 mc:Ignorable="d"
             d:DesignWidth="800"
             d:DesignHeight="450"
			 x:CompileBindings="True"
			 x:DataType="vm:MainWindowViewModel"
             x:Class="Resona.UI.Views.MainView"
			 x:Name="Root">
	<Design.DataContext>
		<vm:MainWindowViewModel />
	</Design.DataContext>

	<UserControl.Resources>
		<converters:DoubleToIsVisibleConverter x:Key="DoubleToIsVisibleConverter"/>
	</UserControl.Resources>

	<Grid Background="Transparent">
		<Grid.RowDefinitions>
			<RowDefinition Height="*"/>
			<RowDefinition Height="Auto"/>
		</Grid.RowDefinitions>

		<i:Interaction.Behaviors>
			<ia:EventTriggerBehavior EventName="PointerMoved">
				<ia:InvokeCommandAction x:CompileBindings="False" Command="{Binding DataContext.ScreenInteraction, ElementName=Root}"/>
			</ia:EventTriggerBehavior>
			<ia:EventTriggerBehavior EventName="PointerPressed">
				<ia:InvokeCommandAction x:CompileBindings="False" Command="{Binding DataContext.ScreenInteraction, ElementName=Root}"/>
			</ia:EventTriggerBehavior>
		</i:Interaction.Behaviors>


		<rxui:RoutedViewHost Router="{Binding Router}" >
			<rxui:RoutedViewHost.PageTransition>
				<CompositePageTransition>
					<CrossFade Duration="0:00:00.100" />
				</CompositePageTransition>
			</rxui:RoutedViewHost.PageTransition>
		</rxui:RoutedViewHost>

		<Grid Margin="15" VerticalAlignment="Top">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="*" />
				<ColumnDefinition Width="Auto"/>
			</Grid.ColumnDefinitions>
			<Grid.Styles>
				<Style Selector="Grid > :is(Control)">
					<Setter Property="Margin" Value="2"/>
				</Style>
				<Style Selector="Grid > TextBlock">
					<Setter Property="VerticalAlignment" Value="Center"/>
				</Style>
			</Grid.Styles>
			<Button Command="{Binding GoBack}" Classes="primary circle">
				<icon:Icon Value="fa fa-arrow-left" />
			</Button>

			<Button Classes="danger circle" Grid.Column="1">
				<icon:Icon Value="fa fa-power-off" />
				<Button.Flyout>
					<Flyout Placement="BottomEdgeAlignedRight">
						<local:PowerOptions />
					</Flyout>
				</Button.Flyout>
			</Button>
		</Grid>

		<local:PlayerControlsView
			Grid.Row="1"/>

		<!-- 
		The screen dim display is shown over the other controls. It accepts hit testing because we don't
		want users to accidentally click on a button when trying to clear it.
		-->
		<Border
			Grid.RowSpan="2"
			Background="Black"
			Opacity="{Binding ScreenDimPercentage}"
			IsVisible="{Binding ScreenDimPercentage, Converter={StaticResource DoubleToIsVisibleConverter}}">
			<i:Interaction.Behaviors>
				<ia:EventTriggerBehavior EventName="PointerMoved">
					<ia:InvokeCommandAction x:CompileBindings="False" Command="{Binding DataContext.ScreenInteraction, ElementName=Root}"/>
				</ia:EventTriggerBehavior>
				<ia:EventTriggerBehavior EventName="PointerPressed">
					<ia:InvokeCommandAction x:CompileBindings="False" Command="{Binding DataContext.ScreenInteraction, ElementName=Root}"/>
				</ia:EventTriggerBehavior>
			</i:Interaction.Behaviors>
			<Border.Transitions>
				<Transitions>
					<DoubleTransition Property="Opacity" Duration="0:00:00.100" />
				</Transitions>
			</Border.Transitions>
		</Border>
	</Grid>
</UserControl>