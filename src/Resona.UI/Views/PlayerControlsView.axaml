<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
			 xmlns:vm="using:Resona.UI.ViewModels"
             mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="140"
			  xmlns:i="clr-namespace:Avalonia.Xaml.Interactivity;assembly=Avalonia.Xaml.Interactivity"
			 xmlns:ia="clr-namespace:Avalonia.Xaml.Interactions.Core;assembly=Avalonia.Xaml.Interactions"
			 xmlns:icon="clr-namespace:Projektanker.Icons.Avalonia;assembly=Projektanker.Icons.Avalonia"
			 xmlns:local="using:Resona.UI.Views"
             x:Class="Resona.UI.Views.PlayerControlsView"
			 x:DataType="vm:PlayerControlsViewModel"
			 xmlns:converters="using:Resona.UI.Converters"
			 x:Name="Root"
			 Height="140"
			 Background="#120810"
			 ClipToBounds="False">
	<Design.DataContext>
		<vm:PlayerControlsViewModel/>
	</Design.DataContext>

	<UserControl.Resources>
		<x:Double x:Key="SkipButtonSize">75</x:Double>
		<converters:VolumeToFontAwesomeConverter x:Key="VolumeToFontAwesomeConverter" />
	</UserControl.Resources>

	<Grid ClipToBounds="False">
		<Slider Grid.Column="0"
		IsEnabled="{Binding CanPlay}"
		Grid.ColumnSpan="3"
		Margin="131,-15,0,0"
		VerticalAlignment="Top"
		ClipToBounds="False"
		Value="{Binding Position, Mode=TwoWay}"
		Maximum="1"
		Minimum="0" />

		<DockPanel LastChildFill="True" Margin="0,30,0,0" Background="#1D0C19">
			<DockPanel LastChildFill="True">
				<Border BoxShadow="5 0 10 8 #4000"
						Background="Transparent"
						CornerRadius="0,40,0,0"
						Margin="0,-30,20,0">
					<Border ClipToBounds="True"
							CornerRadius="0,40,0,0"
							Width="140"
							Height="140"
							BoxShadow="5 0 10 10 Black"
							HorizontalAlignment="Left"
						
						>
						<Image Source="{Binding Cover^}"
							   Stretch="UniformToFill"
							   
					   >
							<i:Interaction.Behaviors>
								<ia:EventTriggerBehavior EventName="Tapped">
									<ia:InvokeCommandAction
										Command="{Binding DataContext.NavigateToPlaying, ElementName=Root}"/>
								</ia:EventTriggerBehavior>
							</i:Interaction.Behaviors>
						</Image>
					</Border>
				</Border>

				<StackPanel Grid.Column="1" Orientation="Vertical" VerticalAlignment="Center" Spacing="5">
					<StackPanel.Styles>
						<Styles>
							<Style Selector="TextBlock">
								<Setter Property="TextWrapping" Value="Wrap" />
							</Style>
						</Styles>
					</StackPanel.Styles>
					<TextBlock Text="{Binding Album}" />
					<TextBlock Text="{Binding Title}" />
				</StackPanel>
			</DockPanel>

			<StackPanel Grid.Column="1"
						VerticalAlignment="Center"
						Orientation="Horizontal"
						Margin="10"
						HorizontalAlignment="Right"
						Spacing="5">

				<Button Classes="primary circle"
						Width="{StaticResource SkipButtonSize}"
						Height="{StaticResource SkipButtonSize}"
					Command="{Binding MovePreviousCommand}">
					<icon:Icon
						Value="fa fa-backward" />
				</Button>

				<Button Classes="primary circle"
						Command="{Binding PlayPauseCommand}"
						x:CompileBindings="False"
						Width="100"
						IsEnabled="{Binding CanPlay}"
						Height="85"
					>
					<Button.Styles>
						<Styles>
							<Style Selector="icon|Icon">
								<Style Selector="^.playing">
									<Setter Property="Value" Value="fa fa-pause" />
								</Style>
								<Style Selector="^.paused">
									<Setter Property="Value" Value="fa fa-play" />
								</Style>
							</Style>
						</Styles>
					</Button.Styles>
					<icon:Icon
						Classes.playing="{Binding IsPlaying}"
						Classes.paused="{Binding !IsPlaying}"/>

				</Button>

				<Button Classes="primary circle"
						Width="{StaticResource SkipButtonSize}"
						Height="{StaticResource SkipButtonSize}"
						Command="{Binding MoveNextCommand}">
					<icon:Icon
						Value="fa fa-forward" />
				</Button>

				<StackPanel Orientation="Vertical"
							VerticalAlignment="Center">

					<Button Classes="primary circle"
								Width="40"
								Height="40"
								Margin="0,0,0,10"
								HorizontalAlignment="Right">
						<icon:Icon Value="{Binding Volume, Converter={StaticResource VolumeToFontAwesomeConverter}}" />

						<Button.Flyout>
							<Flyout Placement="TopEdgeAlignedRight">
								<StackPanel Orientation="Vertical"
											HorizontalAlignment="Center">
									<icon:Icon Value="fa fa-volume-high" 
											   FontSize="30"/>
									<Slider 
										Margin="0,5"
										Value="{Binding Volume}"
										Maximum="1"
										Minimum="0"
										Orientation="Vertical"
										VerticalAlignment="Stretch" 
										Height="200" />
									<icon:Icon Value="fa fa-volume-off" 
											   FontSize="20"/>
								</StackPanel>
							</Flyout>
						</Button.Flyout>
					</Button>
					
					<DockPanel MinWidth="80" LastChildFill="True">
						<Border IsVisible="{Binding SleepOptions.SleepModeActive}"
								BorderThickness="2"
								BorderBrush="{StaticResource PrimaryColor}"
								CornerRadius="10"
									VerticalAlignment="Center"
								Padding="5,0,20,0"
								Margin="5,0,-15,0">

							<TextBlock Text="{Binding SleepOptions.RemainingSleepTime, FallbackValue='1 hour'}" />
						</Border>
						<Button Classes="primary circle"
								Width="40"
								Height="40"
								HorizontalAlignment="Right">
							<icon:Icon Value="fa fa-stopwatch" />

							<Button.Flyout>
								<Flyout Placement="TopEdgeAlignedRight">
									<local:SleepTimerOptionsView DataContext="{Binding SleepOptions}" />
								</Flyout>
							</Button.Flyout>
						</Button>
					</DockPanel>
				</StackPanel>
			</StackPanel>
		</DockPanel>
	</Grid>

</UserControl>
